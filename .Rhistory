y = "Valor",
color = "Variables") +
theme_minimal()
# Crear el gráfico de líneas
ggplot(NAT_long, aes(x = indice_tiempo, y = valor, color = PROVINCIA)) +
geom_line() +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
View(NAT_long)
# Crear el gráfico de líneas
ggplot(NAT_long, aes(x = indice_tiempo, y = valor, color = variable, group = variable)) +
geom_line() +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
# Crear el gráfico de líneas
ggplot(NAT_long, aes(x = indice_tiempo, y = valor, color = PROVINCIA, group = PROVINCIA)) +
geom_line() +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
glimpse(NAT)
T
NAT<- read.csv("datos/NATALIDADDEIS2000-2022.csv") %>%
rename("ANIO"="indice_tiempo")
NAT<- read.csv("datos/NATALIDADDEIS2000-2022.csv") %>%
rename("ANIO"="indice_tiempo") %>%
mutate(ANIO=substr(ANIO,1,4))
NAT<- read.csv("datos/NATALIDADDEIS2000-2022.csv") %>%
rename("ANIO"="indice_tiempo") %>%
mutate(ANIO=as.integer(substr(ANIO,1,4)))
glimpse(NAT)
# Reestructurar el dataframe de formato "wide" a "long"
NAT_long <- NAT %>%
pivot_longer(-ANIO, names_to = "PROVINCIA", values_to = "valor")
# Crear el gráfico de líneas
ggplot(NAT_long, aes(x = ANIO, y = valor, color = PROVINCIA, group = PROVINCIA)) +
geom_line() +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
NAT_long %>%
filter(ANIO=2022 & valor= min(valor))
NAT_long %>%
filter(ANIO=2022 & valor== min(valor))
NAT_long %>%
filter(ANIO==2022 & valor== min(valor))
#MAXIMO
NAT_long %>%
filter(ANIO==2022 & valor== mAX(valor))
#MAXIMO
NAT_long %>%
filter(ANIO==2022 & valor== max(valor))
#MAXIMO
NAT_long %>%
filter(ANIO==2022 & valor== max(valor))
#AÑO 2022
#MINIMO
NAT_long %>%
filter(ANIO==2022 & valor== min(valor))
#MAXIMO
NAT_long %>%
filter(ANIO==2022 & valor== max(valor))
#AÑO 2000
#MINIMO
NAT_long %>%
filter(ANIO==2000 & valor== min(valor))
#AÑO 2022
#MINIMO
NAT_long %>%
filter(ANIO==2022 & valor== min(valor))
#AÑO 2022
#MINIMO
NAT_long %>%
filter(ANIO==2022 & valor== min(valor))
#MAXIMO
NAT_long %>%
filter(ANIO==2022 & valor== max(valor))
NAT_long %>%
filter(ANIO==2000 )
#MAXIMO
NAT_long %>%
filter(ANIO==2000 & valor== max(valor))
#MAXIMO
NAT_long %>%
filter(ANIO==2000 & valor== max(valor))
#MAXIMO
NAT_long %>%
filter(ANIO==2000) %>%
filter(valor== max(valor))
#AÑO 2000
#MINIMO
NAT_long %>%
filter(ANIO==2000) %>%
filter(valor== min(valor))
#AÑO 2022
#MINIMO
NAT_long %>%
filter(ANIO==2022) %>%
filter(valor== min(valor))
#MAXIMO
NAT_long %>%
filter(ANIO==2022) %>%
filter(valor== max(valor))
library(tidyverse)
library(ggplot2)
### SECCION 3: FECUNDIDAD Banco mundial
FECBM<-read.csv("datos/fecundidadBM")
### SECCION 3: FECUNDIDAD Banco mundial
FECBM<-read.csv("datos/fecundidadBM,csv")
### SECCION 3: FECUNDIDAD Banco mundial
FECBM<-read.csv("datos/fecundidadBM.csv")
### SECCION 3: FECUNDIDAD Banco mundial
FECBM<-read.csv("datos/fecundidadBM.csv")
View(FECBM)
### SECCION 3: FECUNDIDAD Banco mundial
FECBM<-read.csv2("datos/fecundidadBM.csv")
### SECCION 3: FECUNDIDAD Banco mundial
FECBM<-read.csv("datos/fecundidadBM.csv",sep=",")
View(FECBM)
### SECCION 3: FECUNDIDAD Banco mundial
FECBM <- read.csv("datos/fecundidadBM.csv", sep = ",", quote = "\"", check.names = FALSE)
View(FECBM)
library(readr)
FECBM <- read_delim("datos/fecundidadBM.csv", delim = ",", quote = "\"", escape_double = TRUE, trim_ws = TRUE)
# Lee el archivo como líneas de texto crudo
raw_data <- read_file("datos/fecundidadBM.csv")
# Elimina las comillas dobles innecesarias
raw_data_clean <- gsub('""', '"', raw_data)
# Vuelve a escribir los datos limpios en un archivo temporal
write_file(raw_data_clean, "datos/fecundidadBM_clean.csv")
# Ahora lee el archivo limpio correctamente
FECBM <- read_csv("datos/fecundidadBM_clean.csv")
i
library(readxl)
### SECCION 3: FECUNDIDAD Banco mundial
FECBM <- read_xlsx("datos/fecundidadBM.csv")
### SECCION 3: FECUNDIDAD Banco mundial
FECBM <- read_xlsx("datos/fecundidadBM.xlsx")
### SECCION 3: FECUNDIDAD Banco mundial
FECBM <- read_xls("datos/fecundidadBM.xls")
View(FECBM)
### SECCION 3: FECUNDIDAD Banco mundial
FECBM <- read_xls("datos/fecundidadBM.xls") %>%
select(-"Indicator Code")
SeleccionFECBM <-FECBM %>%
filter(`Country Name`%in% c("Argentina","Brasil"))
View(SeleccionFECBM)
SeleccionFECBM <-FECBM %>%
filter(`Country Name`%in% c("Argentina","Brasil","Bolivia","México","Alemania","Estados Unidos","Corea, República de", "Federación de Rusia"))
### SECCION 3: FECUNDIDAD Banco mundial
FECBM <- read_xls("datos/fecundidadBM.xls") %>%
select(-"Indicator Code",-"Country Code", -"Indicator Name")
SeleccionFECBM <-FECBM %>%
filter(`Country Name`%in% c("Argentina","Brasil","Bolivia","México","Alemania","Estados Unidos","Corea, República de", "Federación de Rusia"))
# Reestructurar el dataframe de formato "wide" a "long"
seleccion_long <- SeleccionFECBM %>%
pivot_longer(-`Country Name`, names_to = "ANIO", values_to = "FEC")
# Crear el gráfico de líneas
ggplot(SeleccionFECBM, aes(x = ANIO, y = FEC, color = "Country Name", group = "Country Name")) +
geom_line() +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
# Crear el gráfico de líneas
ggplot(seleccion_long, aes(x = ANIO, y = FEC, color = "Country Name", group = "Country Name")) +
geom_line() +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
View(seleccion_long)
View(NAT_long)
glimpse(FECBM)
# Reestructurar el dataframe de formato "wide" a "long"
seleccion_long <- SeleccionFECBM %>%
pivot_longer(-`Country Name`, names_to = "ANIO", values_to = "FEC") %>%
mutate(ANIO= as.integer(ANIO))
# Crear el gráfico de líneas
ggplot(seleccion_long, aes(x = ANIO, y = FEC, color = "Country Name", group = "Country Name")) +
geom_line() +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
glimpse(seleccion_long)
# Reestructurar el dataframe de formato "wide" a "long"
seleccion_long <- SeleccionFECBM %>%
pivot_longer(-`Country Name`, names_to = "ANIO", values_to = "FEC") %>%
mutate(ANIO= as.integer(ANIO),
"Country Name"= as.factor(`Country Name`))
# Crear el gráfico de líneas
ggplot(seleccion_long, aes(x = ANIO, y = FEC, color = "Country Name", group = "Country Name")) +
geom_line() +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
# Crear el gráfico de líneas
ggplot(seleccion_long, aes(x = ANIO, y = FEC, color = Country Name, group = Country Name)) +
geom_line() +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
# Crear el gráfico de líneas
ggplot(seleccion_long, aes(x = ANIO, y = FEC, color = `Country Name`, group = `Country Name`)) +
geom_line() +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
SeleccionFECBM <-FECBM %>%
filter(`Country Name`%in% c("Argentina","Brasil","Bolivia","México","Alemania","Estados Unidos","Corea, República de", "Federación de Rusia","Mundo"))
# Reestructurar el dataframe de formato "wide" a "long"
seleccion_long <- SeleccionFECBM %>%
pivot_longer(-`Country Name`, names_to = "ANIO", values_to = "FEC") %>%
mutate(ANIO= as.integer(ANIO),
"Country Name"= as.factor(`Country Name`))
glimpse(seleccion_long)
# Crear el gráfico de líneas
ggplot(seleccion_long, aes(x = ANIO, y = FEC, color = `Country Name`, group = `Country Name`)) +
geom_line() +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
ggplot(seleccion_long, aes(x = ANIO, y = FEC, color = `Country Name`, group = `Country Name`)) +
geom_line(aes(size = ifelse(`Country Name` %in% c("Argentina", "Mundo"), 1.5, 0.5))) +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "País") +
scale_size_identity() +  # Mantiene los tamaños especificados
theme_minimal()
ggplot(seleccion_long, aes(x = ANIO, y = FEC, color = `Country Name`, group = `Country Name`)) +
geom_line(aes(size = ifelse(`Country Name` %in% c("Argentina", "Mundo"), 1.5, 0.5))) +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "País") +
scale_x_continuous(breaks = seq(min(seleccion_long$ANIO), max(seleccion_long$ANIO), by = 10)) +  # Años de 10 en 10
scale_size_identity() +  # Mantiene los tamaños especificados
theme_minimal()
ggplot(seleccion_long, aes(x = ANIO, y = FEC, color = `Country Name`, group = `Country Name`)) +
geom_line(aes(size = ifelse(`Country Name` %in% c("Argentina", "Mundo"), 1.5, 0.5))) +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "País") +
scale_x_continuous(breaks = seq(min(seleccion_long$ANIO), max(seleccion_long$ANIO), by = 10)) +  # Años de 10 en 10
scale_y_continuous(breaks = seq(floor(min(seleccion_long$FEC)), ceiling(max(seleccion_long$FEC)), by = 0.25)) +  # Incrementos de 0.25 en el eje y
scale_size_identity() +  # Mantiene los tamaños especificados
theme_minimal()
# Reestructurar el dataframe de formato "wide" a "long"
seleccion_long <- SeleccionFECBM %>%
pivot_longer(-`Country Name`, names_to = "ANIO", values_to = "FEC") %>%
mutate(ANIO= as.integer(ANIO),
"Country Name"= as.factor(`Country Name`)) %>%
filter(ANIO=! 2023)
# Reestructurar el dataframe de formato "wide" a "long"
seleccion_long <- SeleccionFECBM %>%
pivot_longer(-`Country Name`, names_to = "ANIO", values_to = "FEC") %>%
mutate(ANIO= as.integer(ANIO),
"Country Name"= as.factor(`Country Name`)) %>%
filter(ANIO== !2023)
# Reestructurar el dataframe de formato "wide" a "long"
seleccion_long <- SeleccionFECBM %>%
pivot_longer(-`Country Name`, names_to = "ANIO", values_to = "FEC") %>%
mutate(ANIO= as.integer(ANIO),
"Country Name"= as.factor(`Country Name`)) %>%
filter(ANIO=! 2023)
# Reestructurar el dataframe de formato "wide" a "long"
seleccion_long <- SeleccionFECBM %>%
pivot_longer(-`Country Name`, names_to = "ANIO", values_to = "FEC") %>%
mutate(ANIO= as.integer(ANIO),
"Country Name"= as.factor(`Country Name`)) %>%
filter(ANIO != 2023)
ggplot(seleccion_long, aes(x = ANIO, y = FEC, color = `Country Name`, group = `Country Name`)) +
geom_line(aes(size = ifelse(`Country Name` %in% c("Argentina", "Mundo"), 1.5, 0.5))) +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "País") +
scale_x_continuous(breaks = seq(min(seleccion_long$ANIO), max(seleccion_long$ANIO), by = 10)) +  # Años de 10 en 10
scale_y_continuous(breaks = seq(floor(min(seleccion_long$FEC)), ceiling(max(seleccion_long$FEC)), by = 0.25)) +  # Incrementos de 0.25 en el eje y
scale_size_identity() +  # Mantiene los tamaños especificados
theme_minimal()
ggplot(seleccion_long, aes(x = ANIO, y = FEC, color = `Country Name`, group = `Country Name`)) +
geom_line(aes(size = ifelse(`Country Name` %in% c("Argentina", "Mundo"), 1.5, 0.5))) +
geom_hline(yintercept = valor_arg_2022, linetype = "dashed", color = "red") +  # Línea horizontal de guía
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "País") +
scale_x_continuous(breaks = seq(min(seleccion_long$ANIO), max(seleccion_long$ANIO), by = 10)) +  # Años de 10 en 10
scale_y_continuous(breaks = seq(floor(min(seleccion_long$FEC)), ceiling(max(seleccion_long$FEC)), by = 0.25)) +  # Incrementos de 0.25 en el eje y
scale_size_identity() +  # Mantiene los tamaños especificados
theme_minimal() +
geom_text(aes(x = 2022, y = valor_arg_2022, label = round(valor_arg_2022, 2)),
vjust = -1, color = "red")  # Añadir texto al lado de la línea
valor_arg_2022 <- seleccion_long %>%
filter(`Country Name` == "Argentina" & ANIO == 2022) %>%
pull(FEC)
ggplot(seleccion_long, aes(x = ANIO, y = FEC, color = `Country Name`, group = `Country Name`)) +
geom_line(aes(size = ifelse(`Country Name` %in% c("Argentina", "Mundo"), 1.5, 0.5))) +
geom_hline(yintercept = valor_arg_2022, linetype = "dashed", color = "red") +  # Línea horizontal de guía
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "País") +
scale_x_continuous(breaks = seq(min(seleccion_long$ANIO), max(seleccion_long$ANIO), by = 10)) +  # Años de 10 en 10
scale_y_continuous(breaks = seq(floor(min(seleccion_long$FEC)), ceiling(max(seleccion_long$FEC)), by = 0.25)) +  # Incrementos de 0.25 en el eje y
scale_size_identity() +  # Mantiene los tamaños especificados
theme_minimal() +
geom_text(aes(x = 2022, y = valor_arg_2022, label = round(valor_arg_2022, 2)),
vjust = -1, color = "red")  # Añadir texto al lado de la línea
NAT <- read.csv("datos/NATALIDADDEIS2000-2022.csv") %>%
rename("ANIO" = "indice_tiempo") %>%
mutate(ANIO = as.integer(substr(ANIO, 1, 4))) %>%
rename_with(~ c("ANIO", "totalARG", "CABA", "Buenos Aires", "Catamarca", "Córdoba",
"Corrientes", "Chaco", "Chubut", "Entre Ríos", "Formosa", "Jujuy",
"La Pampa", "La Rioja", "Mendoza", "Misiones", "Neuquén", "Río Negro",
"Salta", "San Juan", "San Luis", "Santa Cruz", "Santa Fe",
"Santiago del Estero", "Tucumán", "Tierra del Fuego"),
.cols = everything())
# Reestructurar el dataframe de formato "wide" a "long"
NAT_long <- NAT %>%
pivot_longer(-ANIO, names_to = "PROVINCIA", values_to = "valor")
# Crear el gráfico de líneas
ggplot(NAT_long, aes(x = ANIO, y = valor, color = PROVINCIA, group = PROVINCIA)) +
geom_line() +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
#MINIMO
NAT_long %>%
filter(ANIO==2000) %>%
filter(valor== min(valor))
#MAXIMO
NAT_long %>%
filter(ANIO==2000) %>%
filter(valor== max(valor))
#MINIMO
NAT_long %>%
filter(ANIO==2000) %>%
filter(valor== min(valor))
#MAXIMO
NAT_long %>%
filter(ANIO==2000) %>%
filter(valor== max(valor))
#AÑO 2022
#MINIMO
NAT_long %>%
filter(ANIO==2022) %>%
filter(valor== min(valor))
#MAXIMO
NAT_long %>%
filter(ANIO==2022) %>%
filter(valor== max(valor))
# Crear el gráfico de líneas
ggplot(NAT_long, aes(x = ANIO, y = valor, color = PROVINCIA, group = PROVINCIA)) +
geom_line(aes(size = ifelse(PROVINCIA %in% c("Misiones","CABA", "totalARG"), 1.5, 0.5))) +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
ggplot(seleccion_long, aes(x = ANIO, y = FEC, color = `Country Name`, group = `Country Name`)) +
geom_line(aes(size = ifelse(`Country Name` %in% c("Argentina", "Mundo"), 1.5, 0.5))) +
geom_hline(yintercept = valor_arg_2022, linetype = "dashed", color = "red") +  # Línea horizontal de guía
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "País") +
scale_x_continuous(breaks = seq(min(seleccion_long$ANIO), max(seleccion_long$ANIO), by = 10)) +  # Años de 10 en 10
scale_y_continuous(breaks = seq(floor(min(seleccion_long$FEC)), ceiling(max(seleccion_long$FEC)), by = 0.25)) +  # Incrementos de 0.25 en el eje y
scale_size_identity() +  # Mantiene los tamaños especificados
theme_minimal() +
geom_text(aes(x = 2022, y = valor_arg_2022, label = round(valor_arg_2022, 2)),
vjust = -1, color = "red")  # Añadir texto al lado de la línea
# Crear el gráfico de líneas
ggplot(NAT_long, aes(x = ANIO, y = valor, color = PROVINCIA, group = PROVINCIA)) +
geom_line(aes(size = ifelse(PROVINCIA %in% c("Misiones","CABA", "totalARG"), 1.5, 0.5))) +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
# Crear el gráfico de líneas
ggplot(NAT_long, aes(x = ANIO, y = valor, color = PROVINCIA, group = PROVINCIA)) +
geom_line(aes(size = ifelse(PROVINCIA %in% c("Misiones","CABA", "totalARG"), 1, 0.5))) +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
# Crear el gráfico de líneas
ggplot(NAT_long, aes(x = ANIO, y = valor, color = PROVINCIA, group = PROVINCIA)) +
geom_line(aes(size = ifelse(PROVINCIA %in% c("Misiones","CABA", "totalARG"), 0.7, 0.5))) +
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
ggplot(NAT_long, aes(x = ANIO, y = valor, color = PROVINCIA, group = PROVINCIA)) +
geom_line(size = ifelse(NAT_long$PROVINCIA %in% c("Misiones", "CABA", "totalARG"), 0.7, 0.5),
show.legend = FALSE) +  # Eliminar leyenda para tamaño
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
ggplot(NAT_long, aes(x = ANIO, y = valor, color = PROVINCIA, group = PROVINCIA)) +
geom_line(aes(size = ifelse(PROVINCIA %in% c("Misiones", "CABA", "totalARG"), 1.5, 0.5)),
show.legend = FALSE) +  # Elimina leyenda para tamaño
scale_size_identity() +  # Mantiene los tamaños especificados
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
ggplot(NAT_long, aes(x = ANIO, y = valor, color = PROVINCIA, group = PROVINCIA)) +
geom_line(aes(size = ifelse(PROVINCIA %in% c("Misiones", "CABA", "totalARG"), 1.5, 0.5))) +
scale_size_identity() +  # Mantiene los tamaños especificados
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()
ggplot(NAT_long, aes(x = ANIO, y = valor, color = PROVINCIA, group = PROVINCIA)) +
geom_line(aes(size = ifelse(PROVINCIA %in% c("Misiones", "CABA", "totalARG"), 1.5, 0.5))) +
scale_size_identity() +  # Mantiene los tamaños especificados
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()+
guides(color = guide_legend(ncol = 1))
ggplot(seleccion_long, aes(x = ANIO, y = FEC, color = `Country Name`, group = `Country Name`)) +
geom_line(aes(size = ifelse(`Country Name` %in% c("Argentina", "Mundo"), 1.5, 0.5))) +
geom_hline(yintercept = valor_arg_2022, linetype = "dashed", color = "red") +  # Línea horizontal de guía
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "País") +
scale_x_continuous(breaks = seq(min(seleccion_long$ANIO), max(seleccion_long$ANIO), by = 10)) +  # Años de 10 en 10
scale_y_continuous(breaks = seq(floor(min(seleccion_long$FEC)), ceiling(max(seleccion_long$FEC)), by = 0.25)) +  # Incrementos de 0.25 en el eje y
scale_size_identity() +  # Mantiene los tamaños especificados
theme_minimal() +
geom_text(aes(x = 2022, y = valor_arg_2022, label = round(valor_arg_2022, 2)),
vjust = -1, color = "red")  # Añadir texto al lado de la línea
ggplot(NAT_long, aes(x = ANIO, y = valor, color = PROVINCIA, group = PROVINCIA)) +
geom_line(aes(size = ifelse(PROVINCIA %in% c("Misiones", "CABA", "totalARG"), 1.5, 0.5))) +
scale_size_identity() +  # Mantiene los tamaños especificados
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()+
guides(color = guide_legend(ncol = 1))
View(NAC_ANUALES_PROV)
ggplot(NAC_ANUALES_PROV, aes(x = ANIO, y = TOTAL, color = PROVINCIA, group = PROVINCIA)) +
geom_line(aes(size = ifelse(PROVINCIA %in% c("Misiones", "CABA"), 1.5, 0.5))) +
scale_size_identity() +  # Mantiene los tamaños especificados
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()+
guides(color = guide_legend(ncol = 1))
ggplot(NAC_ANUALES_PROV, aes(x = ANIO, y = TOTAL, color = PROVINCIA, group = PROVINCIA)) +
geom_line(aes(size = ifelse(PROVINCIA %in% c("Misiones", "CABA","Buenos Aires"), 1.5, 0.5))) +
scale_size_identity() +  # Mantiene los tamaños especificados
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "Variables") +
theme_minimal()+
guides(color = guide_legend(ncol = 1))
ggplot(seleccion_long, aes(x = ANIO, y = FEC, color = `Country Name`, group = `Country Name`)) +
geom_line(aes(size = ifelse(`Country Name` %in% c("Argentina", "Mundo"), 1.5, 0.5))) +
geom_hline(yintercept = valor_arg_2022, linetype = "dashed", color = "red") +  # Línea horizontal de guía
labs(title = "Gráfico de Múltiples Líneas",
x = "Tiempo",
y = "Valor",
color = "País") +
scale_x_continuous(breaks = seq(min(seleccion_long$ANIO), max(seleccion_long$ANIO), by = 10)) +  # Años de 10 en 10
scale_y_continuous(breaks = seq(floor(min(seleccion_long$FEC)), ceiling(max(seleccion_long$FEC)), by = 0.25)) +  # Incrementos de 0.25 en el eje y
scale_size_identity() +  # Mantiene los tamaños especificados
theme_minimal() +
geom_text(aes(x = 2022, y = valor_arg_2022, label = round(valor_arg_2022, 2)),
vjust = -1, color = "red")  # Añadir texto al lado de la línea
